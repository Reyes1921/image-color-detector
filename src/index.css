@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --light: 80;
  /* the threshold at which colors are considered "light." Range: integers from 0 to 100,
recommended 50 - 70 */
  --threshold: 50;
}

/*Font*/
@font-face {
  font-family: "Krona One";
  src: url("/fonts/KronaOne-Regular.ttf");
  font-weight: 400;
  font-style: normal;
}

* {
  font-family: "Krona One", sans-serif;
}

.main {
  min-height: calc(100vh - 8vh);
}

/*Loader*/
.loader {
  width: 60px;
  height: 40px;
  --base-color: #000; /*use your base color*/
}
.loader::before {
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: #38bdf8;
  background-image: radial-gradient(
      circle 8px at 18px 18px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 18px 0px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 0px 18px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 36px 18px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 18px 36px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 30px 5px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 30px 5px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 30px 30px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 5px 30px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 4px at 5px 5px,
      var(--base-color) 100%,
      transparent 0
    );
  background-repeat: no-repeat;
  box-sizing: border-box;
  animation: rotationBack 3s linear infinite;
}
.loader::after {
  content: "";
  left: 35px;
  top: 15px;
  position: absolute;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: #38bdf8;
  background-image: radial-gradient(
      circle 5px at 12px 12px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 12px 0px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 0px 12px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 24px 12px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 12px 24px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 20px 3px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 20px 3px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 20px 20px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 3px 20px,
      var(--base-color) 100%,
      transparent 0
    ),
    radial-gradient(
      circle 2.5px at 3px 3px,
      var(--base-color) 100%,
      transparent 0
    );
  background-repeat: no-repeat;
  box-sizing: border-box;
  animation: rotationBack 4s linear infinite reverse;
}
@keyframes rotationBack {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

/*Copy clipboard*/
.clipboard {
  --switch: calc((var(--light) - var(--threshold)) * -100%);
  color: hsl(0, 0%, var(--switch));
  border-color: hsl(0, 0%, var(--switch));
}

.gradient-border {
  --border-width: 3px;
  position: relative;
  background: #222;
  border-radius: var(--border-width);

  &::after {
    position: absolute;
    content: "";
    top: calc(-1 * var(--border-width));
    left: calc(-1 * var(--border-width));
    z-index: -1;
    width: calc(100% + var(--border-width) * 2);
    height: calc(100% + var(--border-width) * 2);
    background: linear-gradient(
      60deg,
      hsl(224, 85%, 66%),
      hsl(269, 85%, 66%),
      hsl(314, 85%, 66%),
      hsl(359, 85%, 66%),
      hsl(44, 85%, 66%),
      hsl(89, 85%, 66%),
      hsl(134, 85%, 66%),
      hsl(179, 85%, 66%)
    );
    background-size: 300% 300%;
    background-position: 0 50%;
    border-radius: calc(2 * var(--border-width));
    animation: moveGradient 4s alternate infinite;
  }
}

@keyframes moveGradient {
  50% {
    background-position: 100% 50%;
  }
}

/*Zoom in effect*/
.zoomIn {
  -webkit-animation-name: zoomIn;
  animation-name: zoomIn;
}

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

@-webkit-keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }

  50% {
    opacity: 1;
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    -webkit-transform: scale3d(0.3, 0.3, 0.3);
    transform: scale3d(0.3, 0.3, 0.3);
  }

  50% {
    opacity: 1;
  }
}

/* ===== Scrollbar CSS ===== */
/* Firefox */
* {
  scrollbar-width: auto;
  scrollbar-color: #38bdf8 #111827;
}

/* Chrome, Edge, and Safari */
*::-webkit-scrollbar {
  width: 16px;
}

*::-webkit-scrollbar-track {
  background: #ffffff;
}

*::-webkit-scrollbar-thumb {
  background-color: #38bdf8;
  border-radius: 10px;
  border: 3px solid #ffffff;
}

.p-image-preview-indicator,
.p-image-action.p-link {
  color: #fff;
}

.p-image-preview-container:hover > .p-image-preview-indicator {
  background-color: rgba(0, 0, 0, 0.5);
}

div.p-selectbutton div.p-button {
  padding: 8px;
  background-color: #101726;
}

/*Button Language*/

.p-selectbutton .p-button {
  background: #1f2937;
  border: 1px solid #424b57;
  color: rgba(255, 255, 255, 0.87);
  transition: background-color 0.2s, color 0.2s, border-color 0.2s,
    box-shadow 0.2s;
}

.p-button {
  margin: 0;
  display: inline-flex;
  cursor: pointer;
  user-select: none;
  align-items: center;
  vertical-align: bottom;
  text-align: center;
  overflow: hidden;
  position: relative;
  border-radius: 6px;
}

.p-selectbutton .p-button.p-highlight {
  background: #22d3ee;
  border-color: #22d3ee;
  color: #030712;
}

div.p-selectbutton div.p-button {
  padding: 8px;
  background-color: #101726;
}

.p-button-group .p-button:first-of-type {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.p-button-group .p-button:last-of-type {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.p-button .p-button-label {
  transition-duration: 0.2s;
  font-weight: 700;
}

.p-button-group .p-button:focus {
  position: relative;
  color: #030712;
  z-index: 1;
  background: #22d3ee;
  border-color: #22d3ee;
}

.p-button:focus {
  box-shadow: 0 0 0 2px #1c2127, 0 0 0 4px rgba(34, 211, 238, 0.7),
    0 1px 2px 0 rgba(0, 0, 0, 0);
  outline: 0 none;
  outline-offset: 0;
}

/*Error message*/

.p-inline-message.p-inline-message-error {
  background: #3d1f2b;
  border: solid #ef4444;
  border-width: 1px;
  color: #fca5a5;
}

.p-inline-message {
  align-items: center;
  justify-content: center;
  vertical-align: top;
  padding: 0.75rem 0.75rem;
  margin: 0;
  border-radius: 6px;
}

.p-inline-message-text {
  font-weight: 500;
}

.p-inline-message .p-inline-message-icon.p-icon {
  width: 1rem;
  height: 1rem;
}

.p-inline-message.p-inline-message-error .p-inline-message-icon {
  color: #fca5a5;
}

.p-inline-message .p-inline-message-icon {
  font-size: 1rem;
  margin-right: 0.5rem;
}
